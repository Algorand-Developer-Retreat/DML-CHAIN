#pragma version 10
intcblock 8 0 2 1 16 24
bytecblock 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c 0x 0x4d6f64656c20686173206265656e20616363657074656420666f72206675727468657220636f6e73696465726174696f6e 0x6661696c656420746865206d696e696d756d20726571756972656d656e7473 0x6970667348617368

// This TEAL was generated by TEALScript v0.106.1
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *call_DeleteApplication *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication(string)void
*abi_route_createApplication:
	// modelHash: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createApplication(string)void
	callsub createApplication
	intc 3 // 1
	return

// createApplication(modelHash: string): void
createApplication:
	proto 1 0

	// contracts\Moderator.algo.ts:37
	// this.ipfsHash.value = modelHash
	bytec 5 //  "ipfsHash"
	frame_dig -1 // modelHash: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put
	retsub

// printHash()string
*abi_route_printHash:
	// The ABI return prefix
	pushbytes 0x151f7c75

	// execute printHash()string
	callsub printHash
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	intc 3 // 1
	return

// printHash(): string
printHash:
	proto 0 1

	// contracts\Moderator.algo.ts:42
	// return this.ipfsHash.value;
	bytec 5 //  "ipfsHash"
	app_global_get
	extract 2 0
	retsub

// storeModelParams(string[],string[])void
*abi_route_storeModelParams:
	// paramValues: string[]
	txna ApplicationArgs 2

	// paramkeys: string[]
	txna ApplicationArgs 1

	// execute storeModelParams(string[],string[])void
	callsub storeModelParams
	intc 3 // 1
	return

// storeModelParams(paramkeys: string[], paramValues: string[]): void
storeModelParams:
	proto 2 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 2 // 0x
	dupn 2

	// contracts\Moderator.algo.ts:47
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts\Moderator.algo.ts:48
	// assert(paramkeys.length === paramValues.length)
	frame_dig -1 // paramkeys: string[]
	intc 1 // 0
	extract_uint16
	frame_dig -2 // paramValues: string[]
	intc 1 // 0
	extract_uint16
	==
	assert

	// contracts\Moderator.algo.ts:50
	// i = 0
	intc 1 // 0
	frame_bury 0 // i: uint64

*while_0:

*while_0_continue:
	// contracts\Moderator.algo.ts:51
	// i < paramkeys.length
	frame_dig 0 // i: uint64
	frame_dig -1 // paramkeys: string[]
	intc 1 // 0
	extract_uint16
	<
	bz *while_0_end

	// contracts\Moderator.algo.ts:52
	// key = paramkeys[i]
	frame_dig -1 // paramkeys: string[]
	store 255 // full array
	intc 1 //  initial offset
	frame_dig 0 // i: uint64
	intc 2 // 2
	* // acc * 2
	+
	intc 2 // 2
	+ // add two for length
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	intc 2 // 2
	+ // add two for length
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 3 //  get type length
	* // multiply by type length
	intc 2 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 1 // key: string

	// contracts\Moderator.algo.ts:53
	// value = paramValues[i]
	frame_dig -2 // paramValues: string[]
	store 255 // full array
	intc 1 //  initial offset
	frame_dig 0 // i: uint64
	intc 2 // 2
	* // acc * 2
	+
	intc 2 // 2
	+ // add two for length
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	intc 2 // 2
	+ // add two for length
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 3 //  get type length
	* // multiply by type length
	intc 2 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 2 // value: string

	// contracts\Moderator.algo.ts:55
	// this.parameterKeys(key).value = value
	pushbytes 0x706172616d657465724b657973 // "parameterKeys"
	frame_dig 1 // key: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	dup
	box_del
	pop
	frame_dig 2 // value: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	box_put

	// contracts\Moderator.algo.ts:57
	// i = i + 1
	frame_dig 0 // i: uint64
	intc 3 // 1
	+
	frame_bury 0 // i: uint64
	b *while_0

*while_0_end:
	retsub

// storeClassificationSelectionCriteria(evaluationMetrics: Classification): void
storeClassificationSelectionCriteria:
	proto 1 0

	// contracts\Moderator.algo.ts:75
	// this.classificationPerformanceMetrics('rclassModel').value = evaluationMetrics
	bytec 0 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	frame_dig -1 // evaluationMetrics: Classification
	box_put
	retsub

// storeModelRegressionSelectionCriteria(evaluationMetrics: Regression): void
storeModelRegressionSelectionCriteria:
	proto 1 0

	// contracts\Moderator.algo.ts:80
	// this.regressionPerformanceMetrics('regModel').value = evaluationMetrics
	bytec 1 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	frame_dig -1 // evaluationMetrics: Regression
	box_put
	retsub

// regModelSelectionCriteria(modelEvaluationMetrics: Regression): string
regModelSelectionCriteria:
	proto 1 1

	// *if0_condition
	// contracts\Moderator.algo.ts:87
	// modelEvaluationMetrics.MSE <= baselineRegMetrics.MSE &&
	//       modelEvaluationMetrics.MAE <= baselineRegMetrics.MAE &&
	//       modelEvaluationMetrics.RMSE <= baselineRegMetrics.RMSE &&
	//       modelEvaluationMetrics.COD >= baselineRegMetrics.COD
	frame_dig -1 // modelEvaluationMetrics: Regression
	extract 0 8
	btoi
	bytec 1 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	intc 1 // 0
	intc 0 // 8
	box_extract
	btoi
	<=
	dup
	bz *skip_and0
	frame_dig -1 // modelEvaluationMetrics: Regression
	extract 16 8
	btoi
	bytec 1 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	intc 4 //  headOffset
	intc 0 // 8
	box_extract
	btoi
	<=
	&&

*skip_and0:
	dup
	bz *skip_and1
	frame_dig -1 // modelEvaluationMetrics: Regression
	extract 8 8
	btoi
	bytec 1 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	intc 0 //  headOffset
	intc 0 // 8
	box_extract
	btoi
	<=
	&&

*skip_and1:
	dup
	bz *skip_and2
	frame_dig -1 // modelEvaluationMetrics: Regression
	extract 24 8
	btoi
	bytec 1 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	intc 5 //  headOffset
	intc 0 // 8
	box_extract
	btoi
	>=
	&&

*skip_and2:
	bz *if0_end

	// *if0_consequent
	// contracts\Moderator.algo.ts:92
	// return 'Model has been accepted for further consideration';
	bytec 3 //  "Model has been accepted for further consideration"
	retsub

*if0_end:
	// contracts\Moderator.algo.ts:94
	// return 'failed the minimum requirements';
	bytec 4 //  "failed the minimum requirements"
	retsub

// classModelSelectionCriteria(modelEvaluationMetrics: Classification): string
classModelSelectionCriteria:
	proto 1 1

	// *if1_condition
	// contracts\Moderator.algo.ts:101
	// modelEvaluationMetrics.accuracy >= baselineClassMetrics.accuracy &&
	//       modelEvaluationMetrics.precision >= baselineClassMetrics.precision &&
	//       modelEvaluationMetrics.recall >= baselineClassMetrics.recall &&
	//       modelEvaluationMetrics.specificity >= baselineClassMetrics.specificity &&
	//       modelEvaluationMetrics.F1Score >= baselineClassMetrics.F1Score &&
	//       modelEvaluationMetrics.ROC >= baselineClassMetrics.ROC
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 0 8
	btoi
	bytec 0 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	intc 1 // 0
	intc 0 // 8
	box_extract
	btoi
	>=
	dup
	bz *skip_and3
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 8 8
	btoi
	bytec 0 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	intc 0 //  headOffset
	intc 0 // 8
	box_extract
	btoi
	>=
	&&

*skip_and3:
	dup
	bz *skip_and4
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 16 8
	btoi
	bytec 0 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	intc 4 //  headOffset
	intc 0 // 8
	box_extract
	btoi
	>=
	&&

*skip_and4:
	dup
	bz *skip_and5
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 24 8
	btoi
	bytec 0 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	intc 5 //  headOffset
	intc 0 // 8
	box_extract
	btoi
	>=
	&&

*skip_and5:
	dup
	bz *skip_and6
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 32 8
	btoi
	bytec 0 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	pushint 32 // headOffset
	intc 0 // 8
	box_extract
	btoi
	>=
	&&

*skip_and6:
	dup
	bz *skip_and7
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 40 8
	btoi
	bytec 0 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	pushint 40 // headOffset
	intc 0 // 8
	box_extract
	btoi
	>=
	&&

*skip_and7:
	bz *if1_end

	// *if1_consequent
	// contracts\Moderator.algo.ts:108
	// return 'Model has been accepted for further consideration';
	bytec 3 //  "Model has been accepted for further consideration"
	retsub

*if1_end:
	// contracts\Moderator.algo.ts:110
	// return 'failed the minimum requirements';
	bytec 4 //  "failed the minimum requirements"
	retsub

// deleteApplication()void
*abi_route_deleteApplication:
	// execute deleteApplication()void
	callsub deleteApplication
	intc 3 // 1
	return

// deleteApplication(): void
deleteApplication:
	proto 0 0

	// contracts\Moderator.algo.ts:115
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert
	retsub

*create_NoOp:
	pushbytes 0x115756db // method "createApplication(string)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x1537c194 // method "printHash()string"
	pushbytes 0x4e428f86 // method "storeModelParams(string[],string[])void"
	txna ApplicationArgs 0
	match *abi_route_printHash *abi_route_storeModelParams

	// this contract does not implement the given ABI method for call NoOp
	err

*call_DeleteApplication:
	pushbytes 0x2487c32c // method "deleteApplication()void"
	txna ApplicationArgs 0
	match *abi_route_deleteApplication

	// this contract does not implement the given ABI method for call DeleteApplication
	err