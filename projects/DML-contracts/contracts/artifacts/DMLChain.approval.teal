#pragma version 10
intcblock 0 2 1 8 10 16 24
bytecblock 0x 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c 0x6970667348617368 0x746f74616c4461746153697a65000d746f74616c4461746153697a65 0x6167677253756d73 0x4d6f64656c20686173206265656e20616363657074656420666f72206675727468657220636f6e73696465726174696f6e 0x6661696c656420746865206d696e696d756d20726571756972656d656e7473 0x706172616d657465724b657973

// This TEAL was generated by TEALScript v0.106.1
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *call_UpdateApplication *call_DeleteApplication *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication(string)void
*abi_route_createApplication:
	// modelHash: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createApplication(string)void
	callsub createApplication
	intc 2 // 1
	return

// createApplication(modelHash: string): void
createApplication:
	proto 1 0

	// contracts\Moderator.algo.ts:43
	// this.ipfsHash.value = modelHash
	bytec 3 //  "ipfsHash"
	frame_dig -1 // modelHash: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put
	retsub

// updateApplication(string)void
*abi_route_updateApplication:
	// modelHash: string
	txna ApplicationArgs 1
	extract 2 0

	// execute updateApplication(string)void
	callsub updateApplication
	intc 2 // 1
	return

// updateApplication(modelHash: string): void
updateApplication:
	proto 1 0

	// contracts\Moderator.algo.ts:48
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts\Moderator.algo.ts:49
	// this.ipfsHash.value = modelHash
	bytec 3 //  "ipfsHash"
	frame_dig -1 // modelHash: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put
	retsub

// printHash(string)string
*abi_route_printHash:
	// The ABI return prefix
	pushbytes 0x151f7c75

	// modelHash: string
	txna ApplicationArgs 1
	extract 2 0

	// execute printHash(string)string
	callsub printHash
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	intc 2 // 1
	return

// printHash(modelHash: string): string
printHash:
	proto 1 1

	// contracts\Moderator.algo.ts:54
	// this.ipfsHash.value = modelHash
	bytec 3 //  "ipfsHash"
	frame_dig -1 // modelHash: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put

	// contracts\Moderator.algo.ts:55
	// return this.ipfsHash.value;
	bytec 3 //  "ipfsHash"
	app_global_get
	extract 2 0
	retsub

// storeModelParams(string[],string[])void
*abi_route_storeModelParams:
	// paramValues: string[]
	txna ApplicationArgs 2

	// paramkeys: string[]
	txna ApplicationArgs 1

	// execute storeModelParams(string[],string[])void
	callsub storeModelParams
	intc 2 // 1
	return

// storeModelParams(paramkeys: string[], paramValues: string[]): void
storeModelParams:
	proto 2 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 0 // 0x
	dupn 2

	// contracts\Moderator.algo.ts:60
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts\Moderator.algo.ts:61
	// assert(paramkeys.length === paramValues.length)
	frame_dig -1 // paramkeys: string[]
	intc 0 // 0
	extract_uint16
	frame_dig -2 // paramValues: string[]
	intc 0 // 0
	extract_uint16
	==
	assert

	// contracts\Moderator.algo.ts:63
	// i = 0
	intc 0 // 0
	frame_bury 0 // i: uint64

*while_0:

*while_0_continue:
	// contracts\Moderator.algo.ts:64
	// i < paramkeys.length
	frame_dig 0 // i: uint64
	frame_dig -1 // paramkeys: string[]
	intc 0 // 0
	extract_uint16
	<
	bz *while_0_end

	// contracts\Moderator.algo.ts:65
	// key = paramkeys[i]
	frame_dig -1 // paramkeys: string[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 0 // i: uint64
	intc 1 // 2
	* // acc * 2
	+
	intc 1 // 2
	+ // add two for length
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	intc 1 // 2
	+ // add two for length
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 2 //  get type length
	* // multiply by type length
	intc 1 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 1 // key: string

	// contracts\Moderator.algo.ts:66
	// value = paramValues[i]
	frame_dig -2 // paramValues: string[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 0 // i: uint64
	intc 1 // 2
	* // acc * 2
	+
	intc 1 // 2
	+ // add two for length
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	intc 1 // 2
	+ // add two for length
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 2 //  get type length
	* // multiply by type length
	intc 1 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 2 // value: string

	// contracts\Moderator.algo.ts:68
	// this.parameterKeys(key).value = value
	bytec 8 //  "parameterKeys"
	frame_dig 1 // key: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	dup
	box_del
	pop
	frame_dig 2 // value: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	box_put

	// contracts\Moderator.algo.ts:70
	// i = i + 1
	frame_dig 0 // i: uint64
	intc 2 // 1
	+
	frame_bury 0 // i: uint64
	b *while_0

*while_0_end:
	retsub

// storeClassificationSelectionCriteria(evaluationMetrics: Classification): void
storeClassificationSelectionCriteria:
	proto 1 0

	// contracts\Moderator.algo.ts:88
	// this.classificationPerformanceMetrics('rclassModel').value = evaluationMetrics
	bytec 1 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	frame_dig -1 // evaluationMetrics: Classification
	box_put
	retsub

// storeModelRegressionSelectionCriteria(evaluationMetrics: Regression): void
storeModelRegressionSelectionCriteria:
	proto 1 0

	// contracts\Moderator.algo.ts:93
	// this.regressionPerformanceMetrics('regModel').value = evaluationMetrics
	bytec 2 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	frame_dig -1 // evaluationMetrics: Regression
	box_put
	retsub

// regModelSelectionCriteria(modelEvaluationMetrics: Regression): string
regModelSelectionCriteria:
	proto 1 1

	// *if0_condition
	// contracts\Moderator.algo.ts:100
	// modelEvaluationMetrics.MSE <= baselineRegMetrics.MSE &&
	//       modelEvaluationMetrics.MAE <= baselineRegMetrics.MAE &&
	//       modelEvaluationMetrics.RMSE <= baselineRegMetrics.RMSE &&
	//       modelEvaluationMetrics.COD >= baselineRegMetrics.COD
	frame_dig -1 // modelEvaluationMetrics: Regression
	extract 0 8
	btoi
	bytec 2 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	intc 0 // 0
	intc 3 // 8
	box_extract
	btoi
	<=
	dup
	bz *skip_and0
	frame_dig -1 // modelEvaluationMetrics: Regression
	extract 16 8
	btoi
	bytec 2 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	intc 5 //  headOffset
	intc 3 // 8
	box_extract
	btoi
	<=
	&&

*skip_and0:
	dup
	bz *skip_and1
	frame_dig -1 // modelEvaluationMetrics: Regression
	extract 8 8
	btoi
	bytec 2 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	intc 3 //  headOffset
	intc 3 // 8
	box_extract
	btoi
	<=
	&&

*skip_and1:
	dup
	bz *skip_and2
	frame_dig -1 // modelEvaluationMetrics: Regression
	extract 24 8
	btoi
	bytec 2 // 0x72656772657373696f6e506572666f726d616e63654d65747269637300087265674d6f64656c
	intc 6 //  headOffset
	intc 3 // 8
	box_extract
	btoi
	>=
	&&

*skip_and2:
	bz *if0_end

	// *if0_consequent
	// contracts\Moderator.algo.ts:105
	// return 'Model has been accepted for further consideration';
	bytec 6 //  "Model has been accepted for further consideration"
	retsub

*if0_end:
	// contracts\Moderator.algo.ts:107
	// return 'failed the minimum requirements';
	bytec 7 //  "failed the minimum requirements"
	retsub

// classModelSelectionCriteria(modelEvaluationMetrics: Classification): string
classModelSelectionCriteria:
	proto 1 1

	// *if1_condition
	// contracts\Moderator.algo.ts:114
	// modelEvaluationMetrics.accuracy >= baselineClassMetrics.accuracy &&
	//       modelEvaluationMetrics.precision >= baselineClassMetrics.precision &&
	//       modelEvaluationMetrics.recall >= baselineClassMetrics.recall &&
	//       modelEvaluationMetrics.specificity >= baselineClassMetrics.specificity &&
	//       modelEvaluationMetrics.F1Score >= baselineClassMetrics.F1Score &&
	//       modelEvaluationMetrics.ROC >= baselineClassMetrics.ROC
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 0 8
	btoi
	bytec 1 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	intc 0 // 0
	intc 3 // 8
	box_extract
	btoi
	>=
	dup
	bz *skip_and3
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 8 8
	btoi
	bytec 1 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	intc 3 //  headOffset
	intc 3 // 8
	box_extract
	btoi
	>=
	&&

*skip_and3:
	dup
	bz *skip_and4
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 16 8
	btoi
	bytec 1 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	intc 5 //  headOffset
	intc 3 // 8
	box_extract
	btoi
	>=
	&&

*skip_and4:
	dup
	bz *skip_and5
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 24 8
	btoi
	bytec 1 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	intc 6 //  headOffset
	intc 3 // 8
	box_extract
	btoi
	>=
	&&

*skip_and5:
	dup
	bz *skip_and6
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 32 8
	btoi
	bytec 1 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	pushint 32 // headOffset
	intc 3 // 8
	box_extract
	btoi
	>=
	&&

*skip_and6:
	dup
	bz *skip_and7
	frame_dig -1 // modelEvaluationMetrics: Classification
	extract 40 8
	btoi
	bytec 1 // 0x636c617373696669636174696f6e506572666f726d616e63654d657472696373000b72636c6173734d6f64656c
	pushint 40 // headOffset
	intc 3 // 8
	box_extract
	btoi
	>=
	&&

*skip_and7:
	bz *if1_end

	// *if1_consequent
	// contracts\Moderator.algo.ts:121
	// return 'Model has been accepted for further consideration';
	bytec 6 //  "Model has been accepted for further consideration"
	retsub

*if1_end:
	// contracts\Moderator.algo.ts:123
	// return 'failed the minimum requirements';
	bytec 7 //  "failed the minimum requirements"
	retsub

// submitLocalUpdate(string[],uint64[],uint64)void
*abi_route_submitLocalUpdate:
	// dataSize: uint64
	txna ApplicationArgs 3
	btoi

	// paramValues: uint64[]
	txna ApplicationArgs 2
	extract 2 0

	// paramKeys: string[]
	txna ApplicationArgs 1

	// execute submitLocalUpdate(string[],uint64[],uint64)void
	callsub submitLocalUpdate
	intc 2 // 1
	return

// submitLocalUpdate(paramKeys: string[], paramValues: uint64[], dataSize: uint64): void
submitLocalUpdate:
	proto 3 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 0 // 0x
	dupn 5

	// contracts\Moderator.algo.ts:128
	// oldTotal = this.totalDataSize('totalDataSize').value
	bytec 4 // 0x746f74616c4461746153697a65000d746f74616c4461746153697a65
	box_get

	// box value does not exist: this.totalDataSize('totalDataSize').value
	assert
	btoi
	frame_bury 0 // oldTotal: uint64

	// contracts\Moderator.algo.ts:129
	// this.totalDataSize('totalDataSize').value = oldTotal + dataSize
	bytec 4 // 0x746f74616c4461746153697a65000d746f74616c4461746153697a65
	frame_dig 0 // oldTotal: uint64
	frame_dig -3 // dataSize: uint64
	+
	itob
	box_put

	// contracts\Moderator.algo.ts:131
	// assert(paramKeys.length === paramValues.length)
	frame_dig -1 // paramKeys: string[]
	intc 0 // 0
	extract_uint16
	frame_dig -2 // paramValues: uint64[]
	len
	intc 3 // 8
	/
	==
	assert

	// contracts\Moderator.algo.ts:133
	// i = 0
	intc 0 // 0
	frame_bury 1 // i: uint64

*while_1:

*while_1_continue:
	// contracts\Moderator.algo.ts:134
	// i < paramKeys.length
	frame_dig 1 // i: uint64
	frame_dig -1 // paramKeys: string[]
	intc 0 // 0
	extract_uint16
	<
	bz *while_1_end

	// contracts\Moderator.algo.ts:135
	// pKey = paramKeys[i]
	frame_dig -1 // paramKeys: string[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // i: uint64
	intc 1 // 2
	* // acc * 2
	+
	intc 1 // 2
	+ // add two for length
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	intc 1 // 2
	+ // add two for length
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 2 //  get type length
	* // multiply by type length
	intc 1 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 2 // pKey: string

	// contracts\Moderator.algo.ts:136
	// pVal = paramValues[i]
	frame_dig -2 // paramValues: uint64[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // i: uint64
	intc 3 // 8
	* // acc * typeLength
	+
	load 255 // full array
	swap
	intc 3 // 8
	extract3
	btoi
	frame_bury 3 // pVal: uint64

	// contracts\Moderator.algo.ts:138
	// oldSum = this.aggregatorParameterSums(pKey).value
	bytec 5 //  "aggrSums"
	frame_dig 2 // pKey: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	box_get

	// box value does not exist: this.aggregatorParameterSums(pKey).value
	assert
	btoi
	frame_bury 4 // oldSum: uint64

	// contracts\Moderator.algo.ts:139
	// newSum = oldSum + pVal * dataSize
	frame_dig 4 // oldSum: uint64
	frame_dig 3 // pVal: uint64
	frame_dig -3 // dataSize: uint64
	*
	+
	frame_bury 5 // newSum: uint64

	// contracts\Moderator.algo.ts:141
	// this.aggregatorParameterSums(pKey).value = newSum
	bytec 5 //  "aggrSums"
	frame_dig 2 // pKey: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	frame_dig 5 // newSum: uint64
	itob
	box_put

	// contracts\Moderator.algo.ts:142
	// i = i + 1
	frame_dig 1 // i: uint64
	intc 2 // 1
	+
	frame_bury 1 // i: uint64
	b *while_1

*while_1_end:
	retsub

// finalizeFedAvg(string[])void
*abi_route_finalizeFedAvg:
	// paramKeys: string[]
	txna ApplicationArgs 1

	// execute finalizeFedAvg(string[])void
	callsub finalizeFedAvg
	intc 2 // 1
	return

// finalizeFedAvg(paramKeys: string[]): void
finalizeFedAvg:
	proto 1 0

	// Push empty bytes after the frame pointer to reserve space for local variables
	bytec 0 // 0x
	dupn 4

	// contracts\Moderator.algo.ts:148
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts\Moderator.algo.ts:150
	// total = this.totalDataSize('totalDataSize').value
	bytec 4 // 0x746f74616c4461746153697a65000d746f74616c4461746153697a65
	box_get

	// box value does not exist: this.totalDataSize('totalDataSize').value
	assert
	btoi
	frame_bury 0 // total: uint64

	// contracts\Moderator.algo.ts:151
	// assert(total > 0, 'No data has been aggregated yet.')
	frame_dig 0 // total: uint64
	intc 0 // 0
	>

	// No data has been aggregated yet.
	assert

	// contracts\Moderator.algo.ts:153
	// i = 0
	intc 0 // 0
	frame_bury 1 // i: uint64

*while_2:

*while_2_continue:
	// contracts\Moderator.algo.ts:154
	// i < paramKeys.length
	frame_dig 1 // i: uint64
	frame_dig -1 // paramKeys: string[]
	intc 0 // 0
	extract_uint16
	<
	bz *while_2_end

	// contracts\Moderator.algo.ts:155
	// pKey = paramKeys[i]
	frame_dig -1 // paramKeys: string[]
	store 255 // full array
	intc 0 //  initial offset
	frame_dig 1 // i: uint64
	intc 1 // 2
	* // acc * 2
	+
	intc 1 // 2
	+ // add two for length
	load 255 // full array
	load 255 // full array
	uncover 2
	extract_uint16
	intc 1 // 2
	+ // add two for length
	dup // duplicate start of element
	load 255 // full array
	swap
	extract_uint16 // get number of elements
	intc 2 //  get type length
	* // multiply by type length
	intc 1 // 2
	+ // add two for length
	extract3
	extract 2 0
	frame_bury 2 // pKey: string

	// contracts\Moderator.algo.ts:156
	// sum = this.aggregatorParameterSums(pKey).value
	bytec 5 //  "aggrSums"
	frame_dig 2 // pKey: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	box_get

	// box value does not exist: this.aggregatorParameterSums(pKey).value
	assert
	btoi
	frame_bury 3 // sum: uint64

	// contracts\Moderator.algo.ts:158
	// fedAvgValue = sum / total
	frame_dig 3 // sum: uint64
	frame_dig 0 // total: uint64
	/
	frame_bury 4 // fedAvgValue: uint64

	// contracts\Moderator.algo.ts:160
	// this.parameterKeys(pKey).value = fedAvgValue.toString()
	bytec 8 //  "parameterKeys"
	frame_dig 2 // pKey: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	dup
	box_del
	pop
	frame_dig 4 // fedAvgValue: uint64
	callsub *itoa
	dup
	len
	itob
	extract 6 2
	swap
	concat
	box_put

	// contracts\Moderator.algo.ts:162
	// i = i + 1
	frame_dig 1 // i: uint64
	intc 2 // 1
	+
	frame_bury 1 // i: uint64
	b *while_2

*while_2_end:
	retsub

// deleteApplication()void
*abi_route_deleteApplication:
	// execute deleteApplication()void
	callsub deleteApplication
	intc 2 // 1
	return

// deleteApplication(): void
deleteApplication:
	proto 0 0

	// contracts\Moderator.algo.ts:168
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert
	retsub

*create_NoOp:
	pushbytes 0x115756db // method "createApplication(string)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x966a60b7 // method "printHash(string)string"
	pushbytes 0x4e428f86 // method "storeModelParams(string[],string[])void"
	pushbytes 0xede7e878 // method "submitLocalUpdate(string[],uint64[],uint64)void"
	pushbytes 0xa7066b7d // method "finalizeFedAvg(string[])void"
	txna ApplicationArgs 0
	match *abi_route_printHash *abi_route_storeModelParams *abi_route_submitLocalUpdate *abi_route_finalizeFedAvg

	// this contract does not implement the given ABI method for call NoOp
	err

*call_UpdateApplication:
	pushbytes 0x1747405b // method "updateApplication(string)void"
	txna ApplicationArgs 0
	match *abi_route_updateApplication

	// this contract does not implement the given ABI method for call UpdateApplication
	err

*call_DeleteApplication:
	pushbytes 0x2487c32c // method "deleteApplication()void"
	txna ApplicationArgs 0
	match *abi_route_deleteApplication

	// this contract does not implement the given ABI method for call DeleteApplication
	err

*intToAscii:
	proto 1 1
	pushbytes 0x30313233343536373839 // "0123456789"
	frame_dig -1 // i: uint64
	intc 2 // 1
	extract3
	retsub
	

*itoa:
	proto 1 1
	frame_dig -1 // i: uint64
	intc 0 // 0
	==
	bz *itoa_if_end
	pushbytes 0x30
	retsub

*itoa_if_end:
	frame_dig -1 // i: uint64
	intc 4 // 10
	/
	intc 0 // 0
	>
	bz *itoa_ternary_false
	frame_dig -1 // i: uint64
	intc 4 // 10
	/
	callsub *itoa
	b *itoa_ternary_end

*itoa_ternary_false:
	bytec 0 //  ""

*itoa_ternary_end:
	frame_dig -1 // i: uint64
	intc 4 // 10
	%
	callsub *intToAscii
	concat
	retsub